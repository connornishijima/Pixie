/*
	Pixie ICONS Example
	-----------------------
	
	The standard Pixie text functions (write, print, push, shift)
	allow you to specify 5 bytes of arbitrary column data
	to be written to the display of choice. This allows for
	icons such as a smile, the Bluetooth logo, and more.
	
	pix.push(C0, C1, C2, C1, C4);
	
	FORMAT:

    B0 (LSB)  0   0   0   0   0
    
    B1        0   1   0   1   0
    
    B2        1   0   1   0   1
    
    B3        1   0   0   0   1
    
    B4        0   1   0   1   0
    
    B5        0   0   1   0   0
    
    B6        0   0   0   0   0
    
    B7 (MSB)  0   0   0   0   0
    
              C0  C1  C2  C3  C4
				
	The above example is a heart icon, represented as:
	
	pix.print(B00001100, B00010010, B00100100, B00010010, B00001100);
	or
	pix.print(0x0C,0x12,0x24,0x12,0x0C); for short.
	
	Easier than this, you can refer to the built-in icon pack this
	library has, available for reference at:
	
	https://connornishijima.github.io/Pixie/extras/icon_generator.html
	
	Just click any icons you want and you'll get the corresponding 
	name of the icon, in this case "PIX_HEART" to use in your functions
	instead i.e. "pix.print(PIX_HEART);"
	
	You'll need to include the "Pixie_Icon_Pack.h" file to use the built-in
	pack, as seen below.
*/

#include "Pixie.h"
#include "Pixie_Icon_Pack.h"  // <--- NEEDED FOR BUILT-IN ICONS ----------------!
#define NUM_PIXIES  6                     // PCBs, not matrices
#define CLK_PIN     4                     // Any digital pin
#define DATA_PIN    5                     // Any digital pin
Pixie pix(NUM_PIXIES, CLK_PIN, DATA_PIN); // Set up display buffer

void setup() {
  pix.begin(); // Init display drivers
}

void loop() {
  pix.clear();
  pix.print("ICON");
  pix.print(PIX_HEART);                // Built-in icon
  pix.print(0x5D,0x55,0x55,0x55,0x77); // Custom icon (columns) generated by https://connornishijima.github.io/Pixie/extras/icon_generator.html
  pix.show();
}